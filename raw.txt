<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SocketIO Hello World</title>
</head>
<body>
    <h1>Hello, World Messages</h1>
    <ul id="message-list"></ul>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js"></script>
    <script>
        var socket = io.connect('http://127.0.0.1:5000');
        console.log(socket);

        socket.on('data', function(data) {
            console.log('Received Hello, World!:', data);
            var messageList = document.getElementById('message-list');
            var listItem = document.createElement('li');
            listItem.textContent = data.message;
            messageList.appendChild(listItem);
        });
    </script>
</body>
</html>


from flask import Flask, render_template
from flask_socketio import SocketIO
import threading
import time
import websocket
import json
app = Flask(__name__)
socketio = SocketIO(app, cors_allowed_origins="*")
kline_data=None
@socketio.on('connect')
def start_hello_world_stream():
    def emit_hello_world():
        symbol = "btcusdt" 
        interval = "1m"
        def on_message(ws_app, message):
            global kline_data
            kline_data = json.loads(message)
            print(kline_data)
            ws_app.close()
        def on_error(_, error):
            print(f"WebSocket Error: {error}")
        def on_close(_, close_status_code, close_msg):
            print("WebSocket Closed")
        def on_open(ws_app):
            print('WebSocket opened')
        websocket_url = 'wss://stream.binance.com:9443/ws/' + symbol + '@kline_' + interval
        ws_app = websocket.WebSocketApp(websocket_url, on_open=on_open, on_message=on_message, on_error=on_error, on_close=on_close)
        ws_app.run_forever()
        while True:
            socketio.emit('data', {'message': f'Hello, World! {kline_data}'})
            
            # time.sleep(1)
            

    hello_thread = threading.Thread(target=emit_hello_world)
    hello_thread.start()
    

@app.route('/')
def index():
    return render_template('index.html')

if __name__ == "__main__":
    socketio.run(app, debug=True)













